# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    timezone: '%env(APP_TIMEZONE)%'
    storage_directory: '%kernel.project_dir%/storage/'
    organization_banner_directory: 'organization/banner'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\SetterHelper\Task\:
        resource: '../src/Service/SetterHelper/Task/'
        public: true

    App\Service\GetterHelper\CustomAccessRule\:
        resource: '../src/Service/GetterHelper/CustomAccessRule/'
        public: true

    App\Service\GetterHelper\CustomFormat\:
        resource: '../src/Service/GetterHelper/CustomFormat/'
        public: true

    App\Service\SetterHelper\SetterHelper:
        shared: false

    App\Service\GetterHelper\GetterHelper:
        shared: false

    App\Service\SetterHelper\SetterHelperInterface: '@App\Service\SetterHelper\SetterHelper'
    App\Service\GetterHelper\GetterHelperInterface: '@App\Service\GetterHelper\GetterHelper'

    acme_api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse, priority: -1}

    acme_api.event.authentication_failure_listener:
            class: App\EventListener\AuthenticationFailureListener
            tags:
                - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }

    acme_api.event.jwt_invalid_listener:
        class: App\EventListener\JWTInvalidListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_invalid, method: onJWTInvalid }

    acme_api.event.jwt_expired_listener:
        class: App\EventListener\JWTExpiredListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_expired, method: onJWTExpired }

    acme_api.event.gesdinet.refresh_token_failure:
        class: App\EventListener\JWTRefreshFailureListener
        tags:
            - { name: kernel.event_listener, event: gesdinet.refresh_token_failure, method: onJWTRefreshFailure }

